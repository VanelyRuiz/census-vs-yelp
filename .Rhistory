shiny::runApp('C:/Users/Andrew Towfiq/Desktop/info-201/info-201-assignments/census-vs-yelp')
runApp('C:/Users/Andrew Towfiq/Desktop/info-201/info-201-assignments/census-vs-yelp')
install.packages("ggmap")
install.packages("plotly")
states <- map_data("state")
runApp('C:/Users/Andrew Towfiq/Desktop/info-201/info-201-assignments/census-vs-yelp')
runApp('C:/Users/Andrew Towfiq/Desktop/info-201/info-201-assignments/census-vs-yelp')
runApp('C:/Users/Andrew Towfiq/Desktop/info-201/info-201-assignments/census-vs-yelp')
shiny::runApp()
runApp()
install.packages("plotly")
runApp()
runApp()
runApp()
install.packages("randomcoloR")
runApp()
install.packages("maptools")
runApp()
GetCountyAtPoint <- function(long, lat) {
# handle invalid input
if(!is.numeric(long) | !is.numeric(lat)){
return(NA)
}
# prep map and data structures
world <- map("county", "washington", fill = T, plot = F)
IDs <- sapply(strsplit(world$names, ":"), function(x) x[1])
world.sp <- map2SpatialPolygons(world, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
country.names = sapply(world.sp@polygons, function(x) x@ID)
# create spatial point from coords
point.sp = SpatialPoints(data.frame(long, lat), proj4string=CRS("+proj=longlat +datum=WGS84"))
# look up point in map
country.index <- over(point.sp, world.sp)
# get country name
country.names[country.index]
}
View(GetCountyAtPoint)
world <- map("county", "washington", fill = T, plot = F)
View(world)
world[["names"]]
country.names[country.index]
country.names = sapply(world.sp@polygons, function(x) x@ID)
IDs <- sapply(strsplit(world$names, ":"), function(x) x[1])
world.sp <- map2SpatialPolygons(world, IDs=IDs, proj4string=CRS("+proj=longlat +datum=WGS84"))
country.names = sapply(world.sp@polygons, function(x) x@ID)
country.names[country.index]
point.sp = SpatialPoints(data.frame(long, lat), proj4string=CRS("+proj=longlat +datum=WGS84"))
country.names - "washington,"
runApp()
runApp()
install.packages("Hmisc")
runApp()
